;*****************************************************************************************
; - Initialize Flash NVM by programming FCLKDIV based on oscillator frequency of 16 Mhz
;   uprotect the array, and finally ensure FPVIOL and ACCERR are cleared by writing to them.
;   For ~ 1MHz FCLK frequency table 29.9 FDIV[6:0] = $0F (%00001111)
;*****************************************************************************************

Flash_Init:           ; Subroutine
    movb #$0F,FCLKDIV ; %00001111 -> Flash Clock Divider Register (divider value for 
	                  ; 1MHz FCLK frequency with 16MHz OSSCLK
	movb #$BF,FPROT   ; %10111111 -> P-Flash Protection Register (Disable Flash protection)
	                  ; FPOPEN, RNV6, FPHDIS, FPHS1, FPHS0, FPLDIS, FPLS1, FPLS0
	movb #$30,FSTAT   ; %00110000 - Flash Status Register. Clear Flash Access Error Flag 
	                  ; bit5 and Flash Protection Violation Flag bit4 by writing to their
					  ; respective bits
	rts               ; Return from subroutine
	
;*****************************************************************************************
;*****************************************************************************************

EraseSector1:      ; Subroutine to erase Flash 1024 byte sector starting at address $7000

CheckFCLKDIV1:
    ldaa FCLKDIV        ; Flash Clock Divider Register -> Accu A
	bita $80            ; Check the status of Clock Divider Loaded flag bit7
	beq  CheckFCLKDIV1  ; If FDIVLD is clear we can't procede so loop back 	
	
CheckCCIF1:
	ldaa FSTAT          ; Flash Status Register -> Accu A
	bita $80            ; Check the status of Command Complete Interrupt flag bit7
	bne  CheckCCIF1     ; If CCIF is not clear Flash Common Command Register is not 
	                    ; available and we can't procede so loop back
						
	movb #$30,FSTAT     ; %00110000 - Flash Status Register. Clear Flash Access Error Flag 
	                    ; bit5 and Flash Protection Violation Flag bit4 by writing to their
					    ; respective bits
    movb #$00,FCCOBIX   ; %00000000 ->  Flash CCOB Index Register
    movb #$0A,FCCOBHI   ; %00001001 -> Flash Common Command Register Hi byte
                        ; (Erase P-Flash sector)
	movb #$00,FCCOBLO   ; %00000000 -> Flash Common Command Register Low byte
	                    ; (logical address so no expansion required)
    movb #$01,FCCOBIX   ; %00000001 ->  Flash CCOB Index Register
    movw #$7000,FCCOBHI ; $7000 -> Flash Common Command Register Hi:low 
                        ; (Logical address $7000)
	bclr $80,FSTAT      ; Clear Command Complete Interrupt flag bit7 to launch command
	
CheckCCIF1a:
	ldaa FSTAT          ; Flash Status Register -> Accu A
	bita $80            ; Check the status of Command Complete Interrupt flag bit7
	bne  CheckCCIF1a    ; If CCIF is not clear Flash Common Command Register is not 
	                    ; available and we can't procede so loop back
    rti                 ; Return from subroutine					   

;*****************************************************************************************
;*****************************************************************************************

EraseSector2:      ; Subroutine to erase Flash 1024 byte sector starting at address $7400

CheckFCLKDIV2:
    ldaa FCLKDIV        ; Flash Clock Divider Register -> Accu A
	bita $80            ; Check the status of Clock Divider Loaded flag bit7
	beq  CheckFCLKDIV2  ; If FDIVLD is clear we can't procede so loop back 	
	
CheckCCIF2:
	ldaa FSTAT          ; Flash Status Register -> Accu A
	bita $80            ; Check the status of Command Complete Interrupt flag bit7
	bne  CheckCCIF2     ; If CCIF is not clear Flash Common Command Register is not 
	                    ; available and we can't procede so loop back
						
	movb #$30,FSTAT     ; %00110000 - Flash Status Register. Clear Flash Access Error Flag 
	                    ; bit5 and Flash Protection Violation Flag bit4 by writing to their
					    ; respective bits
    movb #$00,FCCOBIX   ; %00000000 ->  Flash CCOB Index Register
    movb #$0A,FCCOBHI   ; %00001001 -> Flash Common Command Register Hi byte
                        ; (Erase P-Flash sector)
	movb #$00,FCCOBLO   ; %00000000 -> Flash Common Command Register Low byte
	                    ; (logical address so no expansion required)
    movb #$01,FCCOBIX   ; %00000001 ->  Flash CCOB Index Register
    movw #$7400,FCCOBHI ; $7400 -> Flash Common Command Register Hi byte
                        ; (Logical address $7400)
	bclr $80,FSTAT      ; Clear Command Complete Interrupt flag bit7 to launch command
	
CheckCCIF2a:
	ldaa FSTAT          ; Flash Status Register -> Accu A
	bita $80            ; Check the status of Command Complete Interrupt flag bit7
	bne  CheckCCIF2a    ; If CCIF is not clear Flash Common Command Register is not 
	                    ; available and we can't procede so loop back
    rti                 ; Return from subroutine					   

;*****************************************************************************************

;*****************************************************************************************

EraseSector3:      ; Subroutine to erase Flash 1024 byte sector starting at address $7800

CheckFCLKDIV3:
    ldaa FCLKDIV        ; Flash Clock Divider Register -> Accu A
	bita $80            ; Check the status of Clock Divider Loaded flag bit7
	beq  CheckFCLKDIV3  ; If FDIVLD is clear we can't procede so loop back 	
	
CheckCCIF3:
	ldaa FSTAT          ; Flash Status Register -> Accu A
	bita $80            ; Check the status of Command Complete Interrupt flag bit7
	bne  CheckCCIF3     ; If CCIF is not clear Flash Common Command Register is not 
	                    ; available and we can't procede so loop back
						
	movb #$30,FSTAT     ; %00110000 - Flash Status Register. Clear Flash Access Error Flag 
	                    ; bit5 and Flash Protection Violation Flag bit4 by writing to their
					    ; respective bits
    movb #$00,FCCOBIX   ; %00000000 ->  Flash CCOB Index Register
    movb #$0A,FCCOBHI   ; %00001001 -> Flash Common Command Register Hi byte
                        ; (Erase P-Flash sector)
	movb #$00,FCCOBLO   ; %00000000 -> Flash Common Command Register Low byte
	                    ; (logical address so no expansion required)
    movb #$01,FCCOBIX   ; %00000001 ->  Flash CCOB Index Register
    movw #$7800,FCCOBHI ; $7800 -> Flash Common Command Register Hi:Low
                        ; (Logical address $7800)
	bclr $80,FSTAT      ; Clear Command Complete Interrupt flag bit7 to launch command
	
CheckCCIF3a:
	ldaa FSTAT          ; Flash Status Register -> Accu A
	bita $80            ; Check the status of Command Complete Interrupt flag bit7
	bne  CheckCCIF3a    ; If CCIF is not clear Flash Common Command Register is not 
	                    ; available and we can't procede so loop back
    rti                 ; Return from subroutine					   

;*****************************************************************************************

BurnCnt  ds 2 ; Counter for words to be burnt

;*****************************************************************************************
; Subroutine to burn all configurable constanst in RAM starting at address $2400 ending
; at address $2FFF to Flash starting at address $7000 ending at address $2FFF. Total of 
; 3072 bytes or 1536 words ($0600)
;*****************************************************************************************
BurnAll:      
	clrw  BurnCnt      ; Clear BurnCnt		  
    clrd               ; Clear Accu D
	
CheckFCLKDIV4:
    ldaa FCLKDIV       ; Flash Clock Divider Register -> Accu A
	bita $80           ; Check the status of Clock Divider Loaded flag bit7
	beq  CheckFCLKDIV4 ; If FDIVLD is clear we can't procede so loop back 	
	
CheckCCIF4:
	ldaa FSTAT         ; Flash Status Register -> Accu A
	bita $80           ; Check the status of Command Complete Interrupt flag bit7
	bne  CheckCCIF4    ; If CCIF is not clear Flash Common Command Register is not 
	                   ; available and we can't procede so loop back
	movb #$30,FSTAT    ; %00110000 - Flash Status Register. Clear Flash Access Error Flag 
	                   ; bit5 and Flash Protection Violation Flag bit4 by writing to their
					   ; respective bits
    movb #$00,FCCOBIX  ; %00000000 ->  Flash CCOB Index Register
    movb #$06,FCCOBHI  ; %00000110 -> Flash Common Command Register Hi byte
                       ; (Program P-Flash)
	movb #$00,FCCOBLO  ; %00000000 -> Flash Common Command Register Low byte
	                   ; (logical address so no expansion required)
	ldy  #$7000        ; Address of the first configurable constant in Flash
	ldx  D,Y           ; Load Accu D with the contents of Y offset in D
	leay D,Y           ; Effective address-> Accu Y
    movb #$01,FCCOBIX  ; %00000001 ->  Flash CCOB Index Register (address to be programmed)
    sty  FCCOBHI       ; Effective address -> Flash Common Command Register Hi byte
    movb #$10,FCCOBIX  ; %00000010 ->  Flash CCOB Index Register (word 0 to program) 
	ldy  #$2400        ; Address of the first configurable constant in RAM
	ldx  D,Y           ; Load Accu D with the contents of Y offset in D
    stx  FCCOBHI       ; Word 0 program value -> Flash Common Command Register Hi:Low
    movb #$11,FCCOBIX  ; %00000011 ->  Flash CCOB Index Register (word 1 to program)
    incd
    incd
    incw BurnCnt
    incw BurnCnt	
	ldy  #$2400        ; Address of the first configurable constant in RAM
	ldx  D,Y           ; Load Accu D with the contents of Y offset in D
    stx  FCCOBHI       ; Word 1 program value -> Flash Common Command Register Hi:Low
    movb #$100,FCCOBIX ; %00000100 ->  Flash CCOB Index Register (word 2 to program)
    incd
    incd
    incw BurnCnt
    incw BurnCnt	
	ldy  #$2400        ; Address of the first configurable constant in RAM
	ldx  D,Y           ; Load Accu D with the contents of Y offset in D
    stx  FCCOBHI       ; Word 2 program value -> Flash Common Command Register Hi:Low
    movb #$101,FCCOBIX ; %00000101 ->  Flash CCOB Index Register (word 3 to program)
    incd
    incd
    incw BurnCnt
    incw BurnCnt	
	ldy  #$2400        ; Address of the first configurable constant in RAM
	ldx  D,Y           ; Load Accu D with the contents of Y offset in D
    stx  FCCOBHI       ; Word 3 program value -> Flash Common Command Register Hi:Lo
	incd
    incd
    incw BurnCnt
    incw BurnCnt
	bclr $80,FSTAT     ; Clear Command Complete Interrupt flag bit7 to launch command
	
CheckCCIF4a:
	ldaa FSTAT         ; Flash Status Register -> Accu A
	bita $80           ; Check the status of Command Complete Interrupt flag bit7
	bne  CheckCCIF4a   ; If CCIF is not clear Flash Common Command Register is not 
	                   ; available and we can't procede so loop back
	ldx  BurnCnt       ; BurnCnt -> Accu X
	cmpx #$600         ; Compare BurnCnt with decimal 1536
	bne  CheckFCLKDIV4 ; If not equal loop back to CheckFCLKDIV4   
    rti                ; Return from subroutine					   

;*****************************************************************************************









	
